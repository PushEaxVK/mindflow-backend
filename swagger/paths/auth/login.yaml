post:
  summary: User login (JWT retrieval)
  operationId: loginUser
  tags: [Auth]
  description: Authenticate user with email and password. Returns JWT token and user data.
  security: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required: [email, password]
          properties:
            email:
              type: string
              format: email
              description: User's email address
              example: user@example.com
              maxLength: 64
            password:
              type: string
              description: User's password (must contain letters and numbers)
              example: MyPass123!
              minLength: 8
              maxLength: 64
              pattern: '^(?=.*[a-zA-Z])(?=.*\d).{8,64}$'
        examples:
          valid_login:
            summary: Valid login credentials
            value:
              email: user@example.com
              password: MyPass123!
  responses:
    '200':
      description: Login successful, returns JWT token and user data
      content:
        application/json:
          schema:
            type: object
            required: [status, message, data]
            properties:
              status:
                type: integer
                example: 200
                description: HTTP status code
              message:
                type: string
                example: Successfully logged in a user!
                description: Success message
              data:
                type: object
                required: [accessToken, user]
                properties:
                  accessToken:
                    type: string
                    description: JWT access token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  user:
                    type: object
                    required: [_id, name, email]
                    properties:
                      _id:
                        type: string
                        description: User unique identifier
                        example: 507f1f77bcf86cd799439011
                      name:
                        type: string
                        description: User's full name
                        example: Maria Koval
                      email:
                        type: string
                        format: email
                        description: User's email address
                        example: user@example.com
          examples:
            successful_login:
              summary: Successful login response
              value:
                status: 200
                message: Successfully logged in a user!
                data:
                  accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  user:
                    _id: 507f1f77bcf86cd799439011
                    name: Maria Koval
                    email: user@example.com
    '400':
      $ref: '../../components/responses/400.yaml'
    '401':
      description: Invalid credentials
      content:
        application/json:
          schema:
            type: object
            required: [status, message, data]
            properties:
              status:
                type: integer
                example: 401
              message:
                type: string
                example: Login failed
              data:
                type: object
                nullable: true
                example: null
          examples:
            invalid_credentials:
              summary: Invalid email or password
              value:
                status: 401
                message: Invalid email or password
                data: null